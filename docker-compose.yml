version: "3.9"
volumes:
  chat_app_db:
  bundle:
  test_chat_app_db:
  redis_data:
  esdata:
services:
  db: &database
    container_name: development_chat_app_db
    image: mariadb:latest
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${DEVELOPMENT_CHAT_APP_PASSWORD}
      MYSQL_USER: ${DEVELOPMENT_CHAT_APP_USER}
      MYSQL_PASSWORD: ${DEVELOPMENT_CHAT_APP_PASSWORD}
      MYSQL_DATABASE: ${DEVELOPMENT_CHAT_APP_DATABASE}
    volumes:
      - chat_app_db:/var/lib/mysql
  test_db:
    <<: *database
    container_name: test_chat_app_db
    environment:
       MYSQL_ROOT_PASSWORD: ${TEST_CHAT_APP_PASSWORD}
       MYSQL_USER: ${TEST_CHAT_APP_USER}
       MYSQL_PASSWORD: ${TEST_CHAT_APP_PASSWORD}
       MYSQL_DATABASE: ${TEST_CHAT_APP_DATABASE}
    volumes:
      - test_chat_app_db:/var/lib/mysql

  redis: &redis
    image: redis:latest
    volumes:
      - redis_data:/data
    restart: always

  redis_test:
    <<: *redis
    container_name: redis-test
    volumes: []
  web: &rails_app
    container_name: chat_app
    build: .
    env_file: .env
    command: bash -c "bundle exec overcommit --install && bundle exec rails server -b 0.0.0.0"
    tty: true
    stdin_open: true
    restart: always
    entrypoint: ["/usr/bin/entrypoint.sh"]
    volumes:
      - .:/chat_app
      - bundle:/bundle
    ports:
      - "3000:3000"
    depends_on:
      - db
      - test_db
      - redis
      - elastic_search

  worker:
    <<: *rails_app
    container_name: sidekiq_worker
    command: bundle exec sidekiq
    restart: always
    ports: []
    depends_on:
    - db
    - test_db
    - redis
    - web
  elastic_search:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.1.3 # works for both amd and arm architectures
    container_name: elasticsearch
    restart: always
    environment:
      - logger.level=WARN
      - discovery.type=single-node
      - xpack.security.enabled=false # these settings are just for the sake of the task
    volumes:
      - esdata:/usr/share/elasticsearch/data
